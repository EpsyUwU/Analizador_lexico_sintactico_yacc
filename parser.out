Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    IF

Grammar

Rule 0     S' -> program
Rule 1     program -> PUBLIC CLASS ID LBRACE class_body RBRACE
Rule 2     program -> for_statement
Rule 3     class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE
Rule 4     statement_list -> statement
Rule 5     statement_list -> statement_list statement
Rule 6     statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
Rule 7     statement -> declaration SEMICOLON
Rule 8     statement -> for_statement
Rule 9     for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
Rule 10    for_init -> declaration
Rule 11    for_init -> expression
Rule 12    for_init -> empty
Rule 13    for_update -> ID PLUS PLUS
Rule 14    for_update -> ID MINUS MINUS
Rule 15    declaration -> ID ASSIGN expression
Rule 16    declaration -> type_specifier ID
Rule 17    type_specifier -> INT
Rule 18    type_specifier -> FLOAT
Rule 19    type_specifier -> CHAR
Rule 20    expression -> ID
Rule 21    expression -> NUMBER
Rule 22    expression -> ID ASSIGN expression
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression PLUS PLUS expression
Rule 25    expression -> expression MINUS expression
Rule 26    expression -> expression LT expression
Rule 27    expression -> expression LE expression
Rule 28    expression -> expression GT expression
Rule 29    expression -> expression GE expression
Rule 30    expression -> expression EQ expression
Rule 31    expression -> expression NE expression
Rule 32    expression -> STRING_LITERAL
Rule 33    empty -> <empty>

Terminals, with rules where they appear

ARGS                 : 3
ASSIGN               : 15 22
CHAR                 : 19
CLASS                : 1
DOT                  : 6 6
ELSE                 : 
EQ                   : 30
FLOAT                : 18
FOR                  : 9
GE                   : 29
GT                   : 28
ID                   : 1 9 13 14 15 16 20 22
IF                   : 
INT                  : 9 17
LBRACE               : 1 3 9
LBRACKET             : 3
LE                   : 27
LPAREN               : 3 6 9
LT                   : 26
MAIN                 : 3
MINUS                : 14 14 25
NE                   : 31
NUMBER               : 21
OUT                  : 6
PLUS                 : 13 13 23 24 24
PRINTLN              : 6
PUBLIC               : 1 3
RBRACE               : 1 3 9
RBRACKET             : 3
RPAREN               : 3 6 9
SEMICOLON            : 6 7 9 9 9
STATIC               : 3
STRING               : 3
STRING_LITERAL       : 32
SYSTEM               : 6
VOID                 : 3
error                : 

Nonterminals, with rules where they appear

class_body           : 1
declaration          : 7 10
empty                : 12
expression           : 6 9 11 15 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31
for_init             : 9
for_statement        : 2 8
for_update           : 9
program              : 0
statement            : 4 5
statement_list       : 3 5 9
type_specifier       : 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PUBLIC CLASS ID LBRACE class_body RBRACE
    (2) program -> . for_statement
    (9) for_statement -> . INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    PUBLIC          shift and go to state 2
    INT             shift and go to state 4

    program                        shift and go to state 1
    for_statement                  shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> PUBLIC . CLASS ID LBRACE class_body RBRACE

    CLASS           shift and go to state 5


state 3

    (2) program -> for_statement .

    $end            reduce using rule 2 (program -> for_statement .)


state 4

    (9) for_statement -> INT . ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 6


state 5

    (1) program -> PUBLIC CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 7


state 6

    (9) for_statement -> INT ID . SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    SEMICOLON       shift and go to state 8


state 7

    (1) program -> PUBLIC CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 9


state 8

    (9) for_statement -> INT ID SEMICOLON . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    FOR             shift and go to state 10


state 9

    (1) program -> PUBLIC CLASS ID LBRACE . class_body RBRACE
    (3) class_body -> . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE

    PUBLIC          shift and go to state 11

    class_body                     shift and go to state 12

state 10

    (9) for_statement -> INT ID SEMICOLON FOR . LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 13


state 11

    (3) class_body -> PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE

    STATIC          shift and go to state 14


state 12

    (1) program -> PUBLIC CLASS ID LBRACE class_body . RBRACE

    RBRACE          shift and go to state 15


state 13

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN . for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (10) for_init -> . declaration
    (11) for_init -> . expression
    (12) for_init -> . empty
    (15) declaration -> . ID ASSIGN expression
    (16) declaration -> . type_specifier ID
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL
    (33) empty -> .
    (17) type_specifier -> . INT
    (18) type_specifier -> . FLOAT
    (19) type_specifier -> . CHAR

    ID              shift and go to state 17
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24
    SEMICOLON       reduce using rule 33 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    for_init                       shift and go to state 18
    expression                     shift and go to state 19
    declaration                    shift and go to state 20
    empty                          shift and go to state 21
    type_specifier                 shift and go to state 22

state 14

    (3) class_body -> PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE

    VOID            shift and go to state 27


state 15

    (1) program -> PUBLIC CLASS ID LBRACE class_body RBRACE .

    $end            reduce using rule 1 (program -> PUBLIC CLASS ID LBRACE class_body RBRACE .)


state 16

    (17) type_specifier -> INT .

    ID              reduce using rule 17 (type_specifier -> INT .)


state 17

    (15) declaration -> ID . ASSIGN expression
    (20) expression -> ID .
    (22) expression -> ID . ASSIGN expression

    ASSIGN          shift and go to state 28
    PLUS            reduce using rule 20 (expression -> ID .)
    MINUS           reduce using rule 20 (expression -> ID .)
    LT              reduce using rule 20 (expression -> ID .)
    LE              reduce using rule 20 (expression -> ID .)
    GT              reduce using rule 20 (expression -> ID .)
    GE              reduce using rule 20 (expression -> ID .)
    EQ              reduce using rule 20 (expression -> ID .)
    NE              reduce using rule 20 (expression -> ID .)
    SEMICOLON       reduce using rule 20 (expression -> ID .)


state 18

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init . SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    SEMICOLON       shift and go to state 29


state 19

    (11) for_init -> expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    SEMICOLON       reduce using rule 11 (for_init -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37


state 20

    (10) for_init -> declaration .

    SEMICOLON       reduce using rule 10 (for_init -> declaration .)


state 21

    (12) for_init -> empty .

    SEMICOLON       reduce using rule 12 (for_init -> empty .)


state 22

    (16) declaration -> type_specifier . ID

    ID              shift and go to state 38


state 23

    (21) expression -> NUMBER .

    PLUS            reduce using rule 21 (expression -> NUMBER .)
    MINUS           reduce using rule 21 (expression -> NUMBER .)
    LT              reduce using rule 21 (expression -> NUMBER .)
    LE              reduce using rule 21 (expression -> NUMBER .)
    GT              reduce using rule 21 (expression -> NUMBER .)
    GE              reduce using rule 21 (expression -> NUMBER .)
    EQ              reduce using rule 21 (expression -> NUMBER .)
    NE              reduce using rule 21 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 21 (expression -> NUMBER .)
    RPAREN          reduce using rule 21 (expression -> NUMBER .)


state 24

    (32) expression -> STRING_LITERAL .

    PLUS            reduce using rule 32 (expression -> STRING_LITERAL .)
    MINUS           reduce using rule 32 (expression -> STRING_LITERAL .)
    LT              reduce using rule 32 (expression -> STRING_LITERAL .)
    LE              reduce using rule 32 (expression -> STRING_LITERAL .)
    GT              reduce using rule 32 (expression -> STRING_LITERAL .)
    GE              reduce using rule 32 (expression -> STRING_LITERAL .)
    EQ              reduce using rule 32 (expression -> STRING_LITERAL .)
    NE              reduce using rule 32 (expression -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 32 (expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 32 (expression -> STRING_LITERAL .)


state 25

    (18) type_specifier -> FLOAT .

    ID              reduce using rule 18 (type_specifier -> FLOAT .)


state 26

    (19) type_specifier -> CHAR .

    ID              reduce using rule 19 (type_specifier -> CHAR .)


state 27

    (3) class_body -> PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE

    MAIN            shift and go to state 39


state 28

    (15) declaration -> ID ASSIGN . expression
    (22) expression -> ID ASSIGN . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 41

state 29

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON . expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 42

state 30

    (23) expression -> expression PLUS . expression
    (24) expression -> expression PLUS . PLUS expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    PLUS            shift and go to state 44
    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 43

state 31

    (25) expression -> expression MINUS . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 45

state 32

    (26) expression -> expression LT . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 46

state 33

    (27) expression -> expression LE . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 47

state 34

    (28) expression -> expression GT . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 48

state 35

    (29) expression -> expression GE . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 49

state 36

    (30) expression -> expression EQ . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 50

state 37

    (31) expression -> expression NE . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 51

state 38

    (16) declaration -> type_specifier ID .

    SEMICOLON       reduce using rule 16 (declaration -> type_specifier ID .)


state 39

    (3) class_body -> PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 52


state 40

    (20) expression -> ID .
    (22) expression -> ID . ASSIGN expression

    PLUS            reduce using rule 20 (expression -> ID .)
    MINUS           reduce using rule 20 (expression -> ID .)
    LT              reduce using rule 20 (expression -> ID .)
    LE              reduce using rule 20 (expression -> ID .)
    GT              reduce using rule 20 (expression -> ID .)
    GE              reduce using rule 20 (expression -> ID .)
    EQ              reduce using rule 20 (expression -> ID .)
    NE              reduce using rule 20 (expression -> ID .)
    SEMICOLON       reduce using rule 20 (expression -> ID .)
    RPAREN          reduce using rule 20 (expression -> ID .)
    ASSIGN          shift and go to state 53


state 41

    (15) declaration -> ID ASSIGN expression .
    (22) expression -> ID ASSIGN expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

  ! reduce/reduce conflict for SEMICOLON resolved using rule 15 (declaration -> ID ASSIGN expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 15 (declaration -> ID ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37

  ! PLUS            [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! LT              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! LE              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! GT              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! GE              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! NE              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! SEMICOLON       [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]


state 42

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression . SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    SEMICOLON       shift and go to state 54
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37


state 43

    (23) expression -> expression PLUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression PLUS expression .)
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37

  ! LT              [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! NE              [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]


state 44

    (24) expression -> expression PLUS PLUS . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 55

state 45

    (25) expression -> expression MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 25 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 25 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression MINUS expression .)
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37

  ! LT              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! NE              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]


state 46

    (26) expression -> expression LT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 26 (expression -> expression LT expression .)
    MINUS           reduce using rule 26 (expression -> expression LT expression .)
    LT              reduce using rule 26 (expression -> expression LT expression .)
    LE              reduce using rule 26 (expression -> expression LT expression .)
    GT              reduce using rule 26 (expression -> expression LT expression .)
    GE              reduce using rule 26 (expression -> expression LT expression .)
    EQ              reduce using rule 26 (expression -> expression LT expression .)
    NE              reduce using rule 26 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression LT expression .)
    RPAREN          reduce using rule 26 (expression -> expression LT expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 34 ]
  ! GE              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 36 ]
  ! NE              [ shift and go to state 37 ]


state 47

    (27) expression -> expression LE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 27 (expression -> expression LE expression .)
    MINUS           reduce using rule 27 (expression -> expression LE expression .)
    LT              reduce using rule 27 (expression -> expression LE expression .)
    LE              reduce using rule 27 (expression -> expression LE expression .)
    GT              reduce using rule 27 (expression -> expression LE expression .)
    GE              reduce using rule 27 (expression -> expression LE expression .)
    EQ              reduce using rule 27 (expression -> expression LE expression .)
    NE              reduce using rule 27 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression LE expression .)
    RPAREN          reduce using rule 27 (expression -> expression LE expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 34 ]
  ! GE              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 36 ]
  ! NE              [ shift and go to state 37 ]


state 48

    (28) expression -> expression GT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 28 (expression -> expression GT expression .)
    MINUS           reduce using rule 28 (expression -> expression GT expression .)
    LT              reduce using rule 28 (expression -> expression GT expression .)
    LE              reduce using rule 28 (expression -> expression GT expression .)
    GT              reduce using rule 28 (expression -> expression GT expression .)
    GE              reduce using rule 28 (expression -> expression GT expression .)
    EQ              reduce using rule 28 (expression -> expression GT expression .)
    NE              reduce using rule 28 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression GT expression .)
    RPAREN          reduce using rule 28 (expression -> expression GT expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 34 ]
  ! GE              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 36 ]
  ! NE              [ shift and go to state 37 ]


state 49

    (29) expression -> expression GE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 29 (expression -> expression GE expression .)
    MINUS           reduce using rule 29 (expression -> expression GE expression .)
    LT              reduce using rule 29 (expression -> expression GE expression .)
    LE              reduce using rule 29 (expression -> expression GE expression .)
    GT              reduce using rule 29 (expression -> expression GE expression .)
    GE              reduce using rule 29 (expression -> expression GE expression .)
    EQ              reduce using rule 29 (expression -> expression GE expression .)
    NE              reduce using rule 29 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression GE expression .)
    RPAREN          reduce using rule 29 (expression -> expression GE expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 34 ]
  ! GE              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 36 ]
  ! NE              [ shift and go to state 37 ]


state 50

    (30) expression -> expression EQ expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 30 (expression -> expression EQ expression .)
    MINUS           reduce using rule 30 (expression -> expression EQ expression .)
    LT              reduce using rule 30 (expression -> expression EQ expression .)
    LE              reduce using rule 30 (expression -> expression EQ expression .)
    GT              reduce using rule 30 (expression -> expression EQ expression .)
    GE              reduce using rule 30 (expression -> expression EQ expression .)
    EQ              reduce using rule 30 (expression -> expression EQ expression .)
    NE              reduce using rule 30 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 30 (expression -> expression EQ expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 34 ]
  ! GE              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 36 ]
  ! NE              [ shift and go to state 37 ]


state 51

    (31) expression -> expression NE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 31 (expression -> expression NE expression .)
    MINUS           reduce using rule 31 (expression -> expression NE expression .)
    LT              reduce using rule 31 (expression -> expression NE expression .)
    LE              reduce using rule 31 (expression -> expression NE expression .)
    GT              reduce using rule 31 (expression -> expression NE expression .)
    GE              reduce using rule 31 (expression -> expression NE expression .)
    EQ              reduce using rule 31 (expression -> expression NE expression .)
    NE              reduce using rule 31 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression NE expression .)
    RPAREN          reduce using rule 31 (expression -> expression NE expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 34 ]
  ! GE              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 36 ]
  ! NE              [ shift and go to state 37 ]


state 52

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE

    STRING          shift and go to state 56


state 53

    (22) expression -> ID ASSIGN . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 57

state 54

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON . for_update RPAREN LBRACE statement_list RBRACE
    (13) for_update -> . ID PLUS PLUS
    (14) for_update -> . ID MINUS MINUS

    ID              shift and go to state 58

    for_update                     shift and go to state 59

state 55

    (24) expression -> expression PLUS PLUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    PLUS            reduce using rule 24 (expression -> expression PLUS PLUS expression .)
    MINUS           reduce using rule 24 (expression -> expression PLUS PLUS expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression PLUS PLUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression PLUS PLUS expression .)
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37

  ! LT              [ reduce using rule 24 (expression -> expression PLUS PLUS expression .) ]
  ! LE              [ reduce using rule 24 (expression -> expression PLUS PLUS expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression PLUS PLUS expression .) ]
  ! GE              [ reduce using rule 24 (expression -> expression PLUS PLUS expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> expression PLUS PLUS expression .) ]
  ! NE              [ reduce using rule 24 (expression -> expression PLUS PLUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]


state 56

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE

    LBRACKET        shift and go to state 60


state 57

    (22) expression -> ID ASSIGN expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 22 (expression -> ID ASSIGN expression .)
    RPAREN          reduce using rule 22 (expression -> ID ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37

  ! PLUS            [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! LT              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! LE              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! GT              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! GE              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]
  ! NE              [ reduce using rule 22 (expression -> ID ASSIGN expression .) ]


state 58

    (13) for_update -> ID . PLUS PLUS
    (14) for_update -> ID . MINUS MINUS

    PLUS            shift and go to state 61
    MINUS           shift and go to state 62


state 59

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 63


state 60

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET ARGS RPAREN LBRACE statement_list RBRACE

    RBRACKET        shift and go to state 64


state 61

    (13) for_update -> ID PLUS . PLUS

    PLUS            shift and go to state 65


state 62

    (14) for_update -> ID MINUS . MINUS

    MINUS           shift and go to state 66


state 63

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 67


state 64

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . ARGS RPAREN LBRACE statement_list RBRACE

    ARGS            shift and go to state 68


state 65

    (13) for_update -> ID PLUS PLUS .

    RPAREN          reduce using rule 13 (for_update -> ID PLUS PLUS .)


state 66

    (14) for_update -> ID MINUS MINUS .

    RPAREN          reduce using rule 14 (for_update -> ID MINUS MINUS .)


state 67

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE . statement_list RBRACE
    (4) statement_list -> . statement
    (5) statement_list -> . statement_list statement
    (6) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
    (7) statement -> . declaration SEMICOLON
    (8) statement -> . for_statement
    (15) declaration -> . ID ASSIGN expression
    (16) declaration -> . type_specifier ID
    (9) for_statement -> . INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (17) type_specifier -> . INT
    (18) type_specifier -> . FLOAT
    (19) type_specifier -> . CHAR

    SYSTEM          shift and go to state 73
    ID              shift and go to state 70
    INT             shift and go to state 69
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    statement_list                 shift and go to state 71
    statement                      shift and go to state 72
    declaration                    shift and go to state 74
    for_statement                  shift and go to state 75
    type_specifier                 shift and go to state 22

state 68

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 76


state 69

    (9) for_statement -> INT . ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (17) type_specifier -> INT .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 6

  ! ID              [ reduce using rule 17 (type_specifier -> INT .) ]


state 70

    (15) declaration -> ID . ASSIGN expression

    ASSIGN          shift and go to state 77


state 71

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list . RBRACE
    (5) statement_list -> statement_list . statement
    (6) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
    (7) statement -> . declaration SEMICOLON
    (8) statement -> . for_statement
    (15) declaration -> . ID ASSIGN expression
    (16) declaration -> . type_specifier ID
    (9) for_statement -> . INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (17) type_specifier -> . INT
    (18) type_specifier -> . FLOAT
    (19) type_specifier -> . CHAR

    RBRACE          shift and go to state 78
    SYSTEM          shift and go to state 73
    ID              shift and go to state 70
    INT             shift and go to state 69
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    statement                      shift and go to state 79
    declaration                    shift and go to state 74
    for_statement                  shift and go to state 75
    type_specifier                 shift and go to state 22

state 72

    (4) statement_list -> statement .

    RBRACE          reduce using rule 4 (statement_list -> statement .)
    SYSTEM          reduce using rule 4 (statement_list -> statement .)
    ID              reduce using rule 4 (statement_list -> statement .)
    INT             reduce using rule 4 (statement_list -> statement .)
    FLOAT           reduce using rule 4 (statement_list -> statement .)
    CHAR            reduce using rule 4 (statement_list -> statement .)


state 73

    (6) statement -> SYSTEM . DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 80


state 74

    (7) statement -> declaration . SEMICOLON

    SEMICOLON       shift and go to state 81


state 75

    (8) statement -> for_statement .

    RBRACE          reduce using rule 8 (statement -> for_statement .)
    SYSTEM          reduce using rule 8 (statement -> for_statement .)
    ID              reduce using rule 8 (statement -> for_statement .)
    INT             reduce using rule 8 (statement -> for_statement .)
    FLOAT           reduce using rule 8 (statement -> for_statement .)
    CHAR            reduce using rule 8 (statement -> for_statement .)


state 76

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 82


state 77

    (15) declaration -> ID ASSIGN . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 83

state 78

    (9) for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .

    $end            reduce using rule 9 (for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 9 (for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    SYSTEM          reduce using rule 9 (for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 9 (for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 9 (for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 9 (for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 9 (for_statement -> INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)


state 79

    (5) statement_list -> statement_list statement .

    RBRACE          reduce using rule 5 (statement_list -> statement_list statement .)
    SYSTEM          reduce using rule 5 (statement_list -> statement_list statement .)
    ID              reduce using rule 5 (statement_list -> statement_list statement .)
    INT             reduce using rule 5 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 5 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 5 (statement_list -> statement_list statement .)


state 80

    (6) statement -> SYSTEM DOT . OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    OUT             shift and go to state 84


state 81

    (7) statement -> declaration SEMICOLON .

    RBRACE          reduce using rule 7 (statement -> declaration SEMICOLON .)
    SYSTEM          reduce using rule 7 (statement -> declaration SEMICOLON .)
    ID              reduce using rule 7 (statement -> declaration SEMICOLON .)
    INT             reduce using rule 7 (statement -> declaration SEMICOLON .)
    FLOAT           reduce using rule 7 (statement -> declaration SEMICOLON .)
    CHAR            reduce using rule 7 (statement -> declaration SEMICOLON .)


state 82

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE . statement_list RBRACE
    (4) statement_list -> . statement
    (5) statement_list -> . statement_list statement
    (6) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
    (7) statement -> . declaration SEMICOLON
    (8) statement -> . for_statement
    (15) declaration -> . ID ASSIGN expression
    (16) declaration -> . type_specifier ID
    (9) for_statement -> . INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (17) type_specifier -> . INT
    (18) type_specifier -> . FLOAT
    (19) type_specifier -> . CHAR

    SYSTEM          shift and go to state 73
    ID              shift and go to state 70
    INT             shift and go to state 69
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    statement_list                 shift and go to state 85
    statement                      shift and go to state 72
    declaration                    shift and go to state 74
    for_statement                  shift and go to state 75
    type_specifier                 shift and go to state 22

state 83

    (15) declaration -> ID ASSIGN expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    SEMICOLON       reduce using rule 15 (declaration -> ID ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37


state 84

    (6) statement -> SYSTEM DOT OUT . DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 86


state 85

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list . RBRACE
    (5) statement_list -> statement_list . statement
    (6) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
    (7) statement -> . declaration SEMICOLON
    (8) statement -> . for_statement
    (15) declaration -> . ID ASSIGN expression
    (16) declaration -> . type_specifier ID
    (9) for_statement -> . INT ID SEMICOLON FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (17) type_specifier -> . INT
    (18) type_specifier -> . FLOAT
    (19) type_specifier -> . CHAR

    RBRACE          shift and go to state 87
    SYSTEM          shift and go to state 73
    ID              shift and go to state 70
    INT             shift and go to state 69
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    statement                      shift and go to state 79
    declaration                    shift and go to state 74
    for_statement                  shift and go to state 75
    type_specifier                 shift and go to state 22

state 86

    (6) statement -> SYSTEM DOT OUT DOT . PRINTLN LPAREN expression RPAREN SEMICOLON

    PRINTLN         shift and go to state 88


state 87

    (3) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 3 (class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement_list RBRACE .)


state 88

    (6) statement -> SYSTEM DOT OUT DOT PRINTLN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 89


state 89

    (6) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN . expression RPAREN SEMICOLON
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . ID ASSIGN expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression PLUS PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NE expression
    (32) expression -> . STRING_LITERAL

    ID              shift and go to state 40
    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24

    expression                     shift and go to state 90

state 90

    (6) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression . RPAREN SEMICOLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . PLUS PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NE expression

    RPAREN          shift and go to state 91
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    LT              shift and go to state 32
    LE              shift and go to state 33
    GT              shift and go to state 34
    GE              shift and go to state 35
    EQ              shift and go to state 36
    NE              shift and go to state 37


state 91

    (6) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 92


state 92

    (6) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 6 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    SYSTEM          reduce using rule 6 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 6 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 6 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 6 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 6 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for LT in state 41 resolved as shift
WARNING: shift/reduce conflict for LE in state 41 resolved as shift
WARNING: shift/reduce conflict for GT in state 41 resolved as shift
WARNING: shift/reduce conflict for GE in state 41 resolved as shift
WARNING: shift/reduce conflict for EQ in state 41 resolved as shift
WARNING: shift/reduce conflict for NE in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for LT in state 57 resolved as shift
WARNING: shift/reduce conflict for LE in state 57 resolved as shift
WARNING: shift/reduce conflict for GT in state 57 resolved as shift
WARNING: shift/reduce conflict for GE in state 57 resolved as shift
WARNING: shift/reduce conflict for EQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NE in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 69 resolved as shift
WARNING: reduce/reduce conflict in state 41 resolved using rule (declaration -> ID ASSIGN expression)
WARNING: rejected rule (expression -> ID ASSIGN expression) in state 41
