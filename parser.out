Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE

Grammar

Rule 0     S' -> program
Rule 1     program -> PUBLIC CLASS ID LBRACE class_body RBRACE
Rule 2     class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE
Rule 3     statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING_LITERAL RPAREN SEMICOLON
Rule 4     statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN ID RPAREN SEMICOLON

Terminals, with rules where they appear

ARGS                 : 2
CLASS                : 1
DOT                  : 3 3 4 4
ID                   : 1 4
LBRACE               : 1 2
LBRACKET             : 2
LPAREN               : 2 3 4
MAIN                 : 2
OUT                  : 3 4
PRINTLN              : 3 4
PUBLIC               : 1 2
QUOTE                : 
RBRACE               : 1 2
RBRACKET             : 2
RPAREN               : 2 3 4
SEMICOLON            : 3 4
STATIC               : 2
STRING               : 2
STRING_LITERAL       : 3
SYSTEM               : 3 4
VOID                 : 2
error                : 

Nonterminals, with rules where they appear

class_body           : 1
program              : 0
statement            : 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PUBLIC CLASS ID LBRACE class_body RBRACE

    PUBLIC          shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PUBLIC . CLASS ID LBRACE class_body RBRACE

    CLASS           shift and go to state 3


state 3

    (1) program -> PUBLIC CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 4


state 4

    (1) program -> PUBLIC CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 5


state 5

    (1) program -> PUBLIC CLASS ID LBRACE . class_body RBRACE
    (2) class_body -> . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE

    PUBLIC          shift and go to state 6

    class_body                     shift and go to state 7

state 6

    (2) class_body -> PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE

    STATIC          shift and go to state 8


state 7

    (1) program -> PUBLIC CLASS ID LBRACE class_body . RBRACE

    RBRACE          shift and go to state 9


state 8

    (2) class_body -> PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE

    VOID            shift and go to state 10


state 9

    (1) program -> PUBLIC CLASS ID LBRACE class_body RBRACE .

    $end            reduce using rule 1 (program -> PUBLIC CLASS ID LBRACE class_body RBRACE .)


state 10

    (2) class_body -> PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE

    MAIN            shift and go to state 11


state 11

    (2) class_body -> PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 12


state 12

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE

    STRING          shift and go to state 13


state 13

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE

    LBRACKET        shift and go to state 14


state 14

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET ARGS RPAREN LBRACE statement RBRACE

    RBRACKET        shift and go to state 15


state 15

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . ARGS RPAREN LBRACE statement RBRACE

    ARGS            shift and go to state 16


state 16

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS . RPAREN LBRACE statement RBRACE

    RPAREN          shift and go to state 17


state 17

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 18


state 18

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE . statement RBRACE
    (3) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN STRING_LITERAL RPAREN SEMICOLON
    (4) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN ID RPAREN SEMICOLON

    SYSTEM          shift and go to state 20

    statement                      shift and go to state 19

state 19

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 21


state 20

    (3) statement -> SYSTEM . DOT OUT DOT PRINTLN LPAREN STRING_LITERAL RPAREN SEMICOLON
    (4) statement -> SYSTEM . DOT OUT DOT PRINTLN LPAREN ID RPAREN SEMICOLON

    DOT             shift and go to state 22


state 21

    (2) class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE .

    RBRACE          reduce using rule 2 (class_body -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statement RBRACE .)


state 22

    (3) statement -> SYSTEM DOT . OUT DOT PRINTLN LPAREN STRING_LITERAL RPAREN SEMICOLON
    (4) statement -> SYSTEM DOT . OUT DOT PRINTLN LPAREN ID RPAREN SEMICOLON

    OUT             shift and go to state 23


state 23

    (3) statement -> SYSTEM DOT OUT . DOT PRINTLN LPAREN STRING_LITERAL RPAREN SEMICOLON
    (4) statement -> SYSTEM DOT OUT . DOT PRINTLN LPAREN ID RPAREN SEMICOLON

    DOT             shift and go to state 24


state 24

    (3) statement -> SYSTEM DOT OUT DOT . PRINTLN LPAREN STRING_LITERAL RPAREN SEMICOLON
    (4) statement -> SYSTEM DOT OUT DOT . PRINTLN LPAREN ID RPAREN SEMICOLON

    PRINTLN         shift and go to state 25


state 25

    (3) statement -> SYSTEM DOT OUT DOT PRINTLN . LPAREN STRING_LITERAL RPAREN SEMICOLON
    (4) statement -> SYSTEM DOT OUT DOT PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 26


state 26

    (3) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN . STRING_LITERAL RPAREN SEMICOLON
    (4) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN . ID RPAREN SEMICOLON

    STRING_LITERAL  shift and go to state 27
    ID              shift and go to state 28


state 27

    (3) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING_LITERAL . RPAREN SEMICOLON

    RPAREN          shift and go to state 29


state 28

    (4) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 30


state 29

    (3) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING_LITERAL RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 31


state 30

    (4) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 32


state 31

    (3) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING_LITERAL RPAREN SEMICOLON .

    RBRACE          reduce using rule 3 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING_LITERAL RPAREN SEMICOLON .)


state 32

    (4) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN ID RPAREN SEMICOLON .

    RBRACE          reduce using rule 4 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN ID RPAREN SEMICOLON .)

